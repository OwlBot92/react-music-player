{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","currentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","setCurrentSong","setSongs","useEffect","newSongs","map","song","id","active","playPromise","current","play","undefined","then","audio","getTime","time","minutes","Math","floor","seconds","secondsWithZero","String","padStart","skipTrackHandler","direction","currentIndex","findIndex","length","trackAnim","transform","animationPercentage","backLinGrad","background","color","className","currentTime","style","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","a","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf07859d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n//fontawesome\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay, faAngleLeft, faAngleRight, faPause} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\n\r\nconst Player = ({ audioRef, currentSong, isPlaying, setIsPlaying, setSongInfo, songInfo, songs, setCurrentSong, setSongs}) => {\r\n    useEffect( () => {\r\n        const newSongs = songs.map((song) => {\r\n            if (song.id === currentSong.id) {\r\n                return { ...song, active: true };\r\n            }\r\n            else {\r\n                return { ...song, active: false }\r\n            }\r\n        })\r\n        //is playing?\r\n        if (isPlaying) {\r\n            const playPromise = audioRef.current.play();\r\n            if (playPromise !== undefined) {\r\n                playPromise.then((audio) => {\r\n                    audioRef.current.play();\r\n                });\r\n            }\r\n        }\r\n        setSongs(newSongs);\r\n    }, [currentSong]);\r\n\r\n    //EVENT HANDLERS\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n        else {\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    };\r\n\r\n    const getTime = time => {\r\n        const minutes = Math.floor(time / 60)\r\n        const seconds = Math.floor(time % 60)\r\n        const secondsWithZero = String(seconds).padStart(2, \"0\")\r\n        return `${minutes}:${secondsWithZero}`\r\n    }\r\n\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({\r\n            ...songInfo,\r\n            currentTime: e.target.value\r\n        })\r\n    };\r\n\r\n    const skipTrackHandler = (direction) => {\r\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n\r\n        if (direction==='skip-forward') {\r\n            setCurrentSong( songs[(currentIndex + 1) % songs.length]);\r\n        }\r\n\r\n        else if (direction === 'skip-back'){\r\n            \r\n            if ((currentIndex - 1) % songs.length === -1) {\r\n                setCurrentSong(songs[songs.length-1]);\r\n            }\r\n            else{\r\n                setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n            }\r\n        }\r\n        \r\n    };\r\n\r\n    //styling consts\r\n    const trackAnim = {\r\n        transform : `translateX(${songInfo.animationPercentage}%)`\r\n    }\r\n    const backLinGrad = {\r\n        background : `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`\r\n    }\r\n    \r\n    return (\r\n        //JSX\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n\r\n                <div style={backLinGrad}className=\"track\">\r\n                    <input\r\n                        min={0}\r\n                        max={songInfo.duration || 0 }\r\n                        value={songInfo.currentTime}\r\n                        onChange={dragHandler}\r\n                        type=\"range\"\r\n                    />\r\n\r\n                    <div style={trackAnim} className=\"animate-track\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <p>{getTime( songInfo.duration || 0 )}</p>\r\n            </div>\r\n\r\n            <div className=\"play-control\">\r\n                \r\n                {/* Skip Back */}\r\n                <FontAwesomeIcon \r\n                    onClick={ ()=> skipTrackHandler('skip-back')}\r\n                    className=\"skip-back\" \r\n                    size=\"2x\" \r\n                    icon={faAngleLeft} \r\n                />\r\n                \r\n                {/* Play/pause */}\r\n                <FontAwesomeIcon \r\n                    onClick={playSongHandler} \r\n                    className=\"play\" \r\n                    size=\"2x\" \r\n                    icon={isPlaying ? faPause : faPlay} \r\n                />\r\n\r\n                {/* Skip Forward */}\r\n                <FontAwesomeIcon \r\n                    onClick={() => skipTrackHandler('skip-forward')}\r\n                    className=\"skip-forward\" \r\n                    size=\"2x\" \r\n                    icon={faAngleRight} \r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;","import React from \"react\";\r\n\r\nconst Song = ({ currentSong }) => {\r\n    return (\r\n        //JSX\r\n        <div className=\"song-container\">\r\n            <img alt={currentSong.name} src={ currentSong.cover } alt=\"\" />\r\n            <h2>{ currentSong.name }</h2>\r\n            <h3>{ currentSong.artist }</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Song;","import React from \"react\";\r\n\r\nconst LibrarySong = ({ song, songs, setCurrentSong, id, audioRef, isPlaying, setSongs}) => {\r\n\r\n    //handler\r\n    const songSelectHandler = () => {\r\n        setCurrentSong(song);\r\n        //active state\r\n        const newSongs = songs.map((song) => {\r\n            if (song.id === id) {\r\n                return {...song, active: true};\r\n            }\r\n            else{\r\n                return {...song, active: false}\r\n            }\r\n        })\r\n        //is playing?\r\n        if (isPlaying) {\r\n            const playPromise = audioRef.current.play();\r\n            if (playPromise !== undefined) {\r\n                playPromise.then((audio) => {\r\n                    audioRef.current.play();\r\n                });\r\n            }\r\n        }\r\n        setSongs(newSongs);\r\n    };\r\n\r\n    return (\r\n        //JSX\r\n        <div onClick={songSelectHandler} className={`library-song ${ song.active ? 'selected' : \"\" }`} >\r\n            <img alt={song.name} src={song.cover} />\r\n\r\n            <div className=\"song-description\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LibrarySong;","import React from \"react\";\r\n\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus }) => {\r\n\r\n    \r\n\r\n    return (\r\n        <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-songs\">\r\n                {songs.map((song) => (\r\n                    <LibrarySong \r\n                        song={ song } \r\n                        songs={ songs } \r\n                        setCurrentSong={ setCurrentSong }\r\n                        id={ song.id }\r\n                        key={ song.id }\r\n                        audioRef={ audioRef }\r\n                        isPlaying={ isPlaying }\r\n                        setSongs={setSongs}\r\n                        \r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Library;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nav = ({libraryStatus, setLibraryStatus}) => {\r\n    return (\r\n        <nav>\r\n            <h1>Chill!</h1>\r\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic}/>       \r\n            </button>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n    return [\r\n        {\r\n            name: \"Beaver Creek\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n            artist: \"Aso, Middle School, Aviino\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: true,\r\n        },\r\n        {\r\n            name: \"Daylight\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n            artist: \"Aiguille\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n            color: [\"#EF8EA9\", \"#ab417f\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Keep Going\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n            artist: \"Swørn\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n            color: [\"#CD607D\", \"#c94043\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Nightfall\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n            artist: \"Aiguille\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n            color: [\"#EF8EA9\", \"#ab417f\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Reflection\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n            artist: \"Swørn\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n            color: [\"#CD607D\", \"#c94043\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Under the City Stars\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n            artist: \"Aso, Middle School, Aviino\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n\r\n        // ADD MORE HERE \r\n        // from https://chillhop.com/\r\n\r\n        //for the AUDIO\r\n        //F12- network- playbtn- copy link\r\n    ];\r\n}\r\n\r\nexport default chillHop;","import React, { useState, useRef } from \"react\";\n//import Style\nimport \"./styles/app.scss\";\n\n//adding components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n\n//import Data\nimport data from './data';\n\n\n\nfunction App() {\n\t//REF\n\tconst audioRef = useRef(null);\n\t//state\n\tconst [songs, setSongs] = useState(data());\n\tconst [currentSong, setCurrentSong] = useState(songs[0]);\n\tconst [isPlaying, setIsPlaying] = useState(false);\n\tconst [songInfo, setSongInfo] = useState({\n\t\tcurrentTime: 0,\n\t\tduration: 0,\n\t\tanimationPercentage: 0,\n\t});\n\tconst [libraryStatus, setLibraryStatus] = useState(false);\n\n\n\tconst timeUpdateHandler = (e) => {\n\t\tconst current = e.target.currentTime;\n\t\tconst duration = e.target.duration;\n\t\t//percentage\n\t\tconst roundedCurrent = Math.round(current);\n\t\tconst roundedDuration = Math.round(duration);\n\n\t\tconst animation = Math.round((roundedCurrent / roundedDuration) * 100);\n\n\t\tsetSongInfo({\n\t\t\t...songInfo,\n\t\t\tcurrentTime: current,\n\t\t\tduration: duration,\n\t\t\tanimationPercentage: animation,\n\t\t})\n\t};\n\n\t//per lo skip automatico quando finisce una canzone\n\tconst songEndHandler = async() => {\n\t\tlet currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n\t\tawait setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n\t\tif (isPlaying) audioRef.current.play();\n\t};\n\n\t\n\n\treturn (\n\t\t<div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n\t\t\t<Nav \n\t\t\t\t/* PROPS */\n\t\t\t\tlibraryStatus={libraryStatus} \n\t\t\t\tsetLibraryStatus={setLibraryStatus}\n\t\t\t/>\n\n\t\t\t<Song \n\t\t\t\t/* PROPS */\n\t\t\t\tcurrentSong={currentSong} \n\t\t\t/>\n\n\t\t\t<Player\n\t\t\t\t/* PROPS */\n\t\t\t\taudioRef={audioRef}\n\t\t\t\tisPlaying={isPlaying}\n\t\t\t\tsetIsPlaying={setIsPlaying}\n\t\t\t\tcurrentSong={currentSong}\n\t\t\t\tsetSongInfo={setSongInfo}\n\t\t\t\tsongInfo={songInfo}\n\t\t\t\tsongs={songs}\n\t\t\t\tsetCurrentSong={setCurrentSong}\n\t\t\t\tsetSongs={setSongs}\n\t\t\t/>\n\n\t\t\t<Library \n\t\t\t\t/* PROPS */\n\t\t\t\taudioRef={audioRef} \n\t\t\t\tsongs={songs} \n\t\t\t\tsetCurrentSong={setCurrentSong} \n\t\t\t\tisPlaying={isPlaying} \n\t\t\t\tsetSongs={setSongs}\n\t\t\t\tlibraryStatus={libraryStatus}\n\t\t\t/>\n\n\t\t\t<audio\n\t\t\t\tonTimeUpdate={timeUpdateHandler}\n\t\t\t\tonLoadedMetadata={timeUpdateHandler}\n\t\t\t\tref={audioRef}\n\t\t\t\tsrc={currentSong.audio}\n\t\t\t\tonEnded={ ()=>songEndHandler() }\n\t\t\t>\n\n\t\t\t</audio>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}